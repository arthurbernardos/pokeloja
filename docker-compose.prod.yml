services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: kaiyuu-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: kaiyuu_tcg
      POSTGRES_USER: kaiyuu_user
      POSTGRES_PASSWORD: kaiyuu_strong_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kaiyuu-network
    # Don't expose port to host in production

  # Strapi Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kaiyuu-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: postgres
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: kaiyuu_tcg
      DATABASE_USERNAME: kaiyuu_user
      DATABASE_PASSWORD: kaiyuu_strong_password_2024
      DATABASE_SSL: false
      JWT_SECRET: prod-super-secret-jwt-key-change-me-2024
      ADMIN_JWT_SECRET: prod-super-secret-admin-jwt-key-change-me-2024
      API_TOKEN_SALT: prod-super-secret-api-token-salt-change-me-2024
      TRANSFER_TOKEN_SALT: prod-super-secret-transfer-token-salt-change-me-2024
      APP_KEYS: prod-app-key-1,prod-app-key-2,prod-app-key-3,prod-app-key-4
      HOST: 0.0.0.0
      PORT: 1337
      # Production Asaas settings
      ASAAS_API_KEY: ${ASAAS_API_KEY}
      PUBLIC_URL: ${PUBLIC_URL}
      FRONTEND_URL: ${FRONTEND_URL}
    ports:
      - "1337:1337"
    volumes:
      - strapi_uploads:/app/public/uploads
    depends_on:
      - db
    networks:
      - kaiyuu-network
    command: npm run start

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - NEXT_PUBLIC_STRAPI_API_URL=https://api.kaiyuutcg.com.br/api
        - NEXT_PUBLIC_STRAPI_UPLOADS_URL=https://api.kaiyuutcg.com.br
    container_name: kaiyuu-frontend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - kaiyuu-network

  # Note: Nginx disabled for now - Cloudflare handles SSL
  # nginx:
  #   image: nginx:alpine
  #   container_name: kaiyuu-nginx-prod
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - kaiyuu-network

networks:
  kaiyuu-network:
    driver: bridge

volumes:
  postgres_data:
  strapi_uploads: