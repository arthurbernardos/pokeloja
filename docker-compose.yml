services:
  # Banco PostgreSQL
  db:
    image: postgres:15
    container_name: pokeloja-db
    environment:
      POSTGRES_DB: pokeloja
      POSTGRES_USER: pokeloja_user
      POSTGRES_PASSWORD: pokeloja_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432" 
    networks:
      - pokeloja-network

  # Backend Strapi
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pokeloja-backend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_CLIENT: postgres
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SSL: false
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      APP_KEYS: ${APP_KEYS}
      HOST: 0.0.0.0
      PORT: 1337
      # Asaas Payment Gateway - Add your API key here
      ASAAS_API_KEY: ${ASAAS_API_KEY}
      # URLs for webhook configuration
      PUBLIC_URL: ${PUBLIC_URL:-https://api.kairyuutcg.com.br}
      STRAPI_ADMIN_BACKEND_URL: ${PUBLIC_URL:-https://api.kairyuutcg.com.br}
      FRONTEND_URL: ${FRONTEND_URL:-https://kairyuutcg.com.br}
      # Email configuration
      SMTP_HOST: ${SMTP_HOST:-smtp.resend.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-resend}
      SMTP_PASS: ${SMTP_PASS}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@kairyuutcg.com.br}
      FROM_EMAIL: ${FROM_EMAIL:-noreply@kairyuutcg.com.br}
    ports:
      - "1337:1337"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - strapi_uploads:/app/public/uploads
    depends_on:
      - db
    networks:
      - pokeloja-network
    command: npm run start

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pokeloja-frontend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_STRAPI_API_URL: /api
      NEXT_PUBLIC_STRAPI_UPLOADS_URL: ""
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - pokeloja-network
    command: npm run start

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pokeloja-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-simple.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - pokeloja-network

networks:
  pokeloja-network:
    driver: bridge

volumes:
  postgres_data:
  strapi_uploads:
